services:
  app:
    container_name: stepforward-app
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: ["sh", "-c", "/wait-for.sh db && npx prisma migrate deploy && (npm run start:dev & npm run studio)"]
    environment:
      - NODE_ENV=dev
      - PORT=${PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - database
    ports:
      - 8080:8080
      - 5555:5555
    networks:
      - database_network
      # - prisma_studio_network
    volumes:
      - node_modules:/app/node_modules
      - ./src:/app/src
      - ./tsconfig.json:/app/tsconfig.json
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./prisma:/app/prisma
      - ./docker/wait-for.sh:/wait-for.sh
      - ./.env:/app/.env

  database:
    container_name: db
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - database_volume:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    networks:
    - database_network 

  # prisma-studio:
  #   container_name: prisma-studio
  #   image: timothyjmiller/prisma-studio:latest
  #   environment:
  #     POSTGRES_URL: postgresql://root:azertyuiop@localhost:5432/stepfowarddb
  #   depends_on:
  #     - database
  #   ports:
  #     - 5555:5555
  #   networks:
  #     - prisma_studio_network
  #   command: ["--port", "5555"]
  #   volumes:
  #     - ./prisma:/app/prisma

networks:
  database_network:
  # prisma_studio_network:
  
volumes:
  node_modules:
  database_volume: